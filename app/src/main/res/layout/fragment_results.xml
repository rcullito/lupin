<?xml version="1.0" encoding="utf-8"?>

<layout xmlns:android="http://schemas.android.com/apk/res/android"
  xmlns:app="http://schemas.android.com/apk/res-auto"
  xmlns:tools="http://schemas.android.com/tools">

  <data>
    <variable
      name="resultsViewModel"
      type="com.example.diceroller.ResultsViewModel" />
  </data>

  <androidx.constraintlayout.widget.ConstraintLayout
    android:layout_width="match_parent"
    android:layout_height="match_parent"
    tools:context=".sleeptracker.SleepTrackerFragment">

    <androidx.recyclerview.widget.RecyclerView
      android:id="@+id/sleep_list"
      android:layout_width="0dp"
      android:layout_height="0dp"
      app:layout_constraintBottom_toTopOf="@+id/clear_button"
      app:layout_constraintEnd_toEndOf="parent"
      app:layout_constraintStart_toStartOf="parent"
      app:layout_constraintTop_toBottomOf="@+id/stop_button"
      app:layoutManager="androidx.recyclerview.widget.LinearLayoutManager"/>

    <!-- With data binding and LiveData, we can track the buttons' visibility states
         from the ViewModel. The click handler is in the ViewModel as well, and
         you can set it for the Views using this lambda pattern. -->

    <Button
      android:id="@+id/start_button"
      android:layout_width="wrap_content"
      android:layout_height="wrap_content"
      android:text="startt"
      app:layout_constraintBaseline_toBaselineOf="@id/stop_button"
      app:layout_constraintEnd_toStartOf="@+id/stop_button"
      app:layout_constraintHorizontal_chainStyle="spread"
      app:layout_constraintStart_toStartOf="parent" />

    <Button
      android:id="@+id/stop_button"
      android:layout_width="wrap_content"
      android:layout_height="wrap_content"
      android:text="stop"
      app:layout_constraintEnd_toEndOf="parent"
      app:layout_constraintStart_toEndOf="@+id/start_button"
      app:layout_constraintTop_toTopOf="parent" />

    <Button
      android:id="@+id/clear_button"
      android:layout_width="wrap_content"
      android:layout_height="wrap_content"
      android:text="clearr"
      app:layout_constraintBottom_toBottomOf="parent"
      app:layout_constraintEnd_toEndOf="parent"
      app:layout_constraintStart_toStartOf="parent" />

  </androidx.constraintlayout.widget.ConstraintLayout>

</layout>
